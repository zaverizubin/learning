package com.nexusglobal.rabbit.view;

import java.awt.Dimension;
import java.awt.Font;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;

import org.springframework.stereotype.Component;

@Component
public class MainView extends JPanel {
	
	//Autowired
    private final MainPresenter presenter;
    
    //Ui Components
    private JTextField txtQueueName;
    private JTextField txtRountingKey;
    private JTextArea txtLog;
    private JComboBox cmbExchangeType_Publishers;
    private JComboBox cmbPublishersList;
    private JButton btnPausePublisher;
    private JButton btnResumePublisher;
    private JButton btnAddPublisher;
    private JButton btnAddQueue;
    private JComboBox cmbExchangeType_Queues;
    
    //UI Components
    
    //Global
    
    public MainView(final MainPresenter mainPresenter) {
    	this.presenter = mainPresenter;
        buildUI();
    }

    private void buildUI() {
    	initComponents();
        assignEventHandlers();
    	init();
	}
    
    private void init() {
    	
    }
        
	private void assignEventHandlers() {
		
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
    	setMinimumSize(new Dimension(1024, 768));
    	setPreferredSize(new Dimension(1024, 768));
    	setSize(new Dimension(1024, 768));
    	
    	JSplitPane spPane = new javax.swing.JSplitPane();
        spPane.setPreferredSize(new Dimension(1024, 768));
        spPane.setSize(new Dimension(1024, 768));
        spPane.setMinimumSize(new Dimension(1024, 768));
        spPane.setDividerLocation(500);
        spPane.setDividerSize(0);
        
        JPanel pnlLeft = new javax.swing.JPanel();
        pnlLeft.setMaximumSize(new Dimension(100, 768));
        pnlLeft.setBackground(new java.awt.Color(102, 102, 102));
        pnlLeft.setMinimumSize(new Dimension(100, 768));
        pnlLeft.setPreferredSize(new Dimension(100, 768));
        
        JLabel lblIcon = new javax.swing.JLabel();
        lblIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIcon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblIcon.setIconTextGap(0);
        lblIcon.setPreferredSize(new java.awt.Dimension(115, 66));

        
       
        JPanel panel = new JPanel();
        spPane.setLeftComponent(panel);
        
        JPanel pnlQueues = new JPanel();
        
        JLabel lblQueues = new JLabel("Queues");
        lblQueues.setFont(new Font("Tahoma", Font.PLAIN, 14));
        
        cmbExchangeType_Queues = new JComboBox();
        
        txtQueueName = new JTextField();
        txtQueueName.setColumns(10);
        
        JLabel lblExchangeType = new JLabel("Exchange Type");
        
        JLabel lblQueueName = new JLabel("Queue Name");
        
        txtRountingKey = new JTextField();
        txtRountingKey.setColumns(10);
        
        JLabel lblRoutingKey = new JLabel("Routing Key");
        
        btnAddQueue = new JButton("Add Queue");
        GroupLayout gl_pnlQueues = new GroupLayout(pnlQueues);
        gl_pnlQueues.setHorizontalGroup(
        	gl_pnlQueues.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_pnlQueues.createSequentialGroup()
        			.addGap(193)
        			.addComponent(lblQueues, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
        			.addGap(210))
        		.addGroup(gl_pnlQueues.createSequentialGroup()
        			.addGap(185)
        			.addComponent(btnAddQueue)
        			.addContainerGap(207, Short.MAX_VALUE))
        		.addGroup(gl_pnlQueues.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_pnlQueues.createParallelGroup(Alignment.LEADING)
        				.addGroup(gl_pnlQueues.createSequentialGroup()
        					.addComponent(cmbExchangeType_Queues, GroupLayout.PREFERRED_SIZE, 214, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())
        				.addGroup(gl_pnlQueues.createSequentialGroup()
        					.addGroup(gl_pnlQueues.createParallelGroup(Alignment.LEADING)
        						.addGroup(gl_pnlQueues.createSequentialGroup()
        							.addComponent(lblQueueName)
        							.addPreferredGap(ComponentPlacement.RELATED, 389, GroupLayout.PREFERRED_SIZE))
        						.addGroup(gl_pnlQueues.createSequentialGroup()
        							.addComponent(txtQueueName, GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        							.addGap(18)
        							.addGroup(gl_pnlQueues.createParallelGroup(Alignment.LEADING)
        								.addComponent(lblRoutingKey, GroupLayout.PREFERRED_SIZE, 62, GroupLayout.PREFERRED_SIZE)
        								.addComponent(txtRountingKey, GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))
        						.addGroup(gl_pnlQueues.createSequentialGroup()
        							.addComponent(lblExchangeType)
        							.addPreferredGap(ComponentPlacement.RELATED, 377, GroupLayout.PREFERRED_SIZE)))
        					.addGap(18))))
        );
        gl_pnlQueues.setVerticalGroup(
        	gl_pnlQueues.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_pnlQueues.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(lblQueues)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(lblExchangeType)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(cmbExchangeType_Queues, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addGroup(gl_pnlQueues.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblQueueName)
        				.addComponent(lblRoutingKey))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_pnlQueues.createParallelGroup(Alignment.LEADING)
        				.addComponent(txtRountingKey, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
        				.addComponent(txtQueueName, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addComponent(btnAddQueue)
        			.addContainerGap(22, Short.MAX_VALUE))
        );
        pnlQueues.setLayout(gl_pnlQueues);
        
        JPanel pnlPublisher = new JPanel();
        
        JPanel panel_1 = new JPanel();
        GroupLayout gl_panel = new GroupLayout(panel);
        gl_panel.setHorizontalGroup(
        	gl_panel.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, gl_panel.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_panel.createParallelGroup(Alignment.TRAILING)
        				.addComponent(panel_1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        				.addComponent(pnlPublisher, GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        				.addComponent(pnlQueues, GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE))
        			.addContainerGap())
        );
        gl_panel.setVerticalGroup(
        	gl_panel.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_panel.createSequentialGroup()
        			.addGap(5)
        			.addComponent(pnlQueues, GroupLayout.PREFERRED_SIZE, 232, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(pnlPublisher, GroupLayout.PREFERRED_SIZE, 194, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 256, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        txtLog = new JTextArea();
        GroupLayout gl_panel_1 = new GroupLayout(panel_1);
        gl_panel_1.setHorizontalGroup(
        	gl_panel_1.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_panel_1.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(txtLog, GroupLayout.PREFERRED_SIZE, 459, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap())
        );
        gl_panel_1.setVerticalGroup(
        	gl_panel_1.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_panel_1.createSequentialGroup()
        			.addGap(5)
        			.addComponent(txtLog, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        			.addContainerGap())
        );
        panel_1.setLayout(gl_panel_1);
        
        JLabel lblPublishers = new JLabel("Publishers");
        lblPublishers.setFont(new Font("Tahoma", Font.PLAIN, 14));
        
        JLabel lblExchangeType_1 = new JLabel("Exchange Type");
        
        cmbExchangeType_Publishers = new JComboBox();
        
        btnAddPublisher = new JButton("Add Publisher");
        
        JLabel lblPublisherList = new JLabel("Publisher List");
        
        cmbPublishersList = new JComboBox();
        
        btnPausePublisher = new JButton("Add Publisher");
        
        btnResumePublisher = new JButton("Resume Publisher");
        GroupLayout gl_pnlPublisher = new GroupLayout(pnlPublisher);
        gl_pnlPublisher.setHorizontalGroup(
        	gl_pnlPublisher.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_pnlPublisher.createSequentialGroup()
        			.addGroup(gl_pnlPublisher.createParallelGroup(Alignment.LEADING)
        				.addGroup(gl_pnlPublisher.createSequentialGroup()
        					.addGap(196)
        					.addComponent(lblPublishers, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE))
        				.addGroup(gl_pnlPublisher.createSequentialGroup()
        					.addContainerGap()
        					.addGroup(gl_pnlPublisher.createParallelGroup(Alignment.LEADING)
        						.addComponent(lblExchangeType_1, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE)
        						.addGroup(gl_pnlPublisher.createSequentialGroup()
        							.addComponent(cmbExchangeType_Publishers, GroupLayout.PREFERRED_SIZE, 214, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(btnAddPublisher, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE))))
        				.addGroup(gl_pnlPublisher.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(lblPublisherList, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE))
        				.addGroup(gl_pnlPublisher.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(cmbPublishersList, GroupLayout.PREFERRED_SIZE, 214, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(btnPausePublisher)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(btnResumePublisher, GroupLayout.PREFERRED_SIZE, 119, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap(11, Short.MAX_VALUE))
        );
        gl_pnlPublisher.setVerticalGroup(
        	gl_pnlPublisher.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_pnlPublisher.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(lblPublishers)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(lblExchangeType_1)
        			.addGap(11)
        			.addGroup(gl_pnlPublisher.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cmbExchangeType_Publishers, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnAddPublisher, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addComponent(lblPublisherList)
        			.addGap(18)
        			.addGroup(gl_pnlPublisher.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cmbPublishersList, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnPausePublisher, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnResumePublisher, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(31, Short.MAX_VALUE))
        );
        pnlPublisher.setLayout(gl_pnlPublisher);
        panel.setLayout(gl_panel);
       
    }// </editor-fold>//GEN-END:initComponents
	
}
